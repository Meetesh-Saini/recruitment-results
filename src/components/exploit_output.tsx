import { useEffect, useState } from "react";

export default function ExploitOutput() {

    const [exploiting, setExploiting] = useState(true);
    const [exploitOut, setExploitOut] = useState(<span>Starting the exploit...</span>);
    const [messageIndex, setMessageIndex] = useState(0);

    const randInt = (min: number, max: number) => {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    const exploitMessage = ["Scanning the network", "Fetching the IP of the remote server",
        "Progress:", "[#_________]", "[###_______]", "[####______]", "[#####_____]",
        "[######____]", "[########__]", "[#########_]", "[##########]",
        `IP: 104.${randInt(0, 254)}.${randInt(0, 254)}.${randInt(1, 254)}`,
        "Initializing the reverse shell", "Handshake : [x]", "Handshake : [\u2713]",
        "Connecting: Estimated Tries = 5", "Failed [x]", "Failed [x]", "Success [\u2713]",
        ""]

    useEffect(() => {
        if (!exploiting || messageIndex >= exploitMessage.length) {
            setExploiting(false);
            setMessageIndex(0);
            return;
        }
        const timer = setTimeout(() => {
            setExploitOut((prevExploitOut) => (
                <>
                    {prevExploitOut}
                    <br />
                    <span>{exploitMessage[messageIndex]}</span>
                </>
            ));
            console.log(messageIndex, exploitOut);
            setMessageIndex(prevIndex => prevIndex + 1);
        }, randInt(100, 500));
        return () => clearTimeout(timer);
    }, [exploiting, messageIndex]);

    return (
        <span>
            {exploitOut}
        </span>
    )
}
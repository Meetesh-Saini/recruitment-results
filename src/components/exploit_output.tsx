import { useEffect, useState } from "react";

// export default function ExploitOutput({ setOut }: {
//     setOut: React.Dispatch<React.SetStateAction<boolean>>,
// }) {
export default function ExploitOutput() {

    const [exploiting, setExploiting] = useState(true);
    const [exploitOut, setExploitOut] = useState("Starting the exploit...");
    const exploitMessage = ["Scanning the network", "Fetching the IP"]
    const [messageIndex, setMessageIndex] = useState(0);

    const randInt = (min: number, max: number) => {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    useEffect(() => {
        if (!exploiting || messageIndex >= exploitMessage.length) {
            setExploiting(false);
            setMessageIndex(0);
            // setOut(false);
            return;
        }
        const timer = setTimeout(() => {
            setExploitOut((prevExploitOut) => prevExploitOut + exploitMessage[messageIndex]);
            console.log(messageIndex, exploitOut);
            setMessageIndex(prevIndex => prevIndex + 1);
        }, randInt(100,300));
        return () => clearTimeout(timer);
    }, [exploiting, messageIndex]);

    return (
        <span>
            {exploitOut}
        </span>
    )
}